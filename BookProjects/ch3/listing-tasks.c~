#include <linux/xched.h>

/* This function is called when the module is loaded. */
int simple_init(void)
{
  printk(KERN_INFO "Loading Module\n");
  struct task_struct *task;
  for_each_process(task) {
    printk(KERN_INFO "Name %s; State: %d; Process Id: %d\n", task->comm, task->state, task->pid);
  }


  return 0;
}

/* This function is called when the module is removed. */
void simple_exit(void) {
  struct birthday *ptr,*next;
  list_for_each_entry_safe(ptr,next,&birthday_list,list) {
    list_del(&ptr->list);
    kfree(ptr);
  }

  printk(KERN_INFO "Removing Module\n");
}

/* Macros for registering module entry and exit points. */
module_init( simple_init );
module_exit( simple_exit );

MODULE_LICENSE("GPL");
MODULE_DESCRIPTION("Simple Module");
MODULE_AUTHOR("SGG");
